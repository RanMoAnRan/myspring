<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd">

    <!--同过配置文件装配bean-->


    <!--P名称空间注入-->
    <!--xmlns:p="http://www.springframework.org/schema/p"-->

    <!--加载外部资源-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClass}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>


    <!--jdbcTemplate-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--参数dataSource-->
        <constructor-arg index="0" ref="dataSource"></constructor-arg>
    </bean>


    <!--
    通过配置文件给 bean 中的属性传值：使用 set 方法的方式
    涉及的标签：
       Property相关属性：
       name：找的是类中 set 方法后面的部分
       ref：给属性赋值是其他 bean 类型的
       value：给属性赋值是基本数据类型和 string 类型的
       实际开发中，此种方式用的较多。
    -->
    <bean id="accountDao" class="com.jing.dao.impl.AccountDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"></property>
    </bean>


    <!--
    使用构造函数注入属性值：
    涉及的标签：   constructor-arg
    属性：
      index:指定参数在构造函数参数列表的索引位置
      name:指定参数在构造函数中的名称,指定给谁赋值

     上面三个属性都是指给谁赋值，下面两个属性指的是赋什么值的

     value:它能赋的值是基本数据类型和 String 类型
     ref:它能赋的值是其他 bean 类型，也就是说，必须得是在配置文件中配置过的 bean
     -->
    <bean id="accountService" class="com.jing.service.impl.AccountServiceImpl">
        <constructor-arg name="accountDao" ref="accountDao"></constructor-arg>
    </bean>

</beans>
